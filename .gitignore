# -*- coding: utf-8 -*-
"""
Created on Thu Oct 24 09:56:13 2019

@author: LiFish
"""

import pygame as pg    # 匯入pygame
import threading       # 匯入 threading
import random          # 匯入random
import time            # 匯入time
import sys             # 匯入sys

sys.setrecursionlimit(999999) 


pg.init() # 開始

p = 0            # 宣告
px = 0 ; py = 0
t_go = False      
running = True
cx = random.randrange(0,603,67) # 餅乾亂數(x軸)
cy = random.randrange(0,603,67) # 餅乾亂數(y軸)

screen = pg.display.set_mode((670,670)) #視窗大小
pg.display.set_caption('game')  #遊戲名稱

tim = pg.font.SysFont('simhei',60)   #文字
point = pg.font.SysFont('simhei',60)
point2 = pg.font.SysFont('simhei',172)

back = pg.image.load('back.png')     #圖片
player = pg.image.load('player.png')
cookie = pg.image.load('cookie.png')
green = pg.image.load('green.png')
white = pg.image.load('white.png')

screen.blit(back,(0,0))  #匯入背景
screen.blit(player,(0,0))  #匯入玩家
screen.blit(cookie,(cx,cy)) #匯入餅乾
pg.display.update()  #刷新


def get_time():  # 自訂函式(子序)
    global t   #宣告 t
    t = 7
    while running:
        text = tim.render(f'{t}s',True,(0,0,0),(255,255,255))  #時間顯示
        screen.blit(white,(247,0))
        pg.display.update()        
        screen.blit(text,(250,0))
        pg.display.update()
        time.sleep(1)
        t -= 1
        screen.blit(white,(600,0))
        pg.display.update()        
        text2 = point.render(f'{p}',True,(0,0,0),(255,255,255))  #分數顯示
        screen.blit(text2,(600,0))
        pg.display.update()
        if t == -1:
            print('game over')
            global t_go # 離開
            t_go = True
            break
            
t = threading.Thread(target = get_time) #子序
t.start()

while running:  #迴式
    for event in pg.event.get():
        if event.type == pg.QUIT: #得到離開
            running = False
        elif event.type == pg.KEYDOWN: #往上移動
            if event.key == pg.K_UP:
                screen.blit(green,(px,py))
                pg.display.update()
                py -= 67
                screen.blit(player,(px,py))
                pg.display.update()
                if py < 0:          #越界
                    px = 0 ; py =0
                    screen.blit(player,(px,py))
                    pg.display.update()
            elif event.key == pg.K_LEFT: #往左移動
                screen.blit(green,(px,py))
                pg.display.update()
                px -= 67
                screen.blit(player,(px,py))
                pg.display.update()
                if px < 0:           #越界
                    px = 0 ; py =0
                    screen.blit(player,(px,py))
                    pg.display.update()
            elif event.key == pg.K_RIGHT: #往右移動
                screen.blit(green,(px,py))
                pg.display.update()
                px += 67
                screen.blit(player,(px,py))
                pg.display.update()
                if px > 603:  #越界
                    px = 0 ; py = 0
                    screen.blit(player,(px,py))
                    pg.display.update()
            elif event.key == pg.K_DOWN: #往下移動
                screen.blit(green,(px,py))
                pg.display.update()
                py += 67
                screen.blit(player,(px,py))
                pg.display.update()
                if py > 603:  #越界
                    px = 0 ; py =0
                    screen.blit(player,(px,py))
                    pg.display.update()
            if cx == px and cy == py:  #吃到餅乾
                p += 1
                cx = random.randrange(0,603,67)
                cy = random.randrange(0,603,67)
                screen.blit(cookie,(cx,cy))
                pg.display.update()
                if p < 10:   #秒數增加
                    t += 5
                elif p < 20:
                    t += 4
                elif p < 30:
                    t += 3
                elif p < 50:
                    if p%2 == 0:
                        t += 3
                elif p < 90:
                    if p%4 == 0:
                        t += 3
                else:
                    if p%7 == 0:
                        t += 3
    if t_go == True: #離開迴式
        break
        
screen.blit(back,(0,0))  #新背景
pg.display.update()
time.sleep(0.7)
text3 = point2.render(f'{p}',True,(0,0,0),(255,255,255)) #顯示分數
screen.blit(text3,(100,300))
pg.display.update()

while running:
    for event in pg.event.get():
        if event.type == pg.QUIT:
            running = False
pg.quit() #離開
